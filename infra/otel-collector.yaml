receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

processors:
  batch:

connectors:
  spanmetrics:
    namespace: service
    dimensions:
      - name: http.request.method
      - name: http.route
      - name: http.status_code
    histogram:
      explicit:
        buckets: [5ms, 10ms, 25ms, 50ms, 100ms, 250ms, 500ms, 1s, 2s, 5s]

exporters:
  # Prometheus exporter exposes metrics for Prometheus to scrape
  prometheus:
    endpoint: 0.0.0.0:8889
    namespace: otelcol

  # Export traces to Grafana Tempo via OTLP gRPC
  otlp:
    endpoint: tempo:4317
    tls:
      insecure: true

service:
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch]
      # Export traces to Tempo via OTLP and also feed spanmetrics
      exporters: [otlp, spanmetrics]

    # Route spanmetrics connector output to Prometheus exporter
    metrics:
      receivers: [spanmetrics]
      processors: [batch]
      exporters: [prometheus]

  telemetry:
    metrics:
      level: Basic
  extensions: []
