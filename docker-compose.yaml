services:
  app1:
    build:
      context: .
      dockerfile: Dockerfile
    platform: ${APP_PLATFORM:-linux/amd64}
    container_name: app1
    hostname: app1
    environment:
      - PORT=4001
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=tasrinha_dev
      - DB_POOL_SIZE=10
      - DB_POOL_COUNT=2
      - ERL_AFLAGS=+S 2:2
      - ERL_FLAGS=+sbwt none +sbwtdcpu none +sbwtdio none
      - ERL_FULLSWEEP_AFTER=10
      - LOG_LEVEL=info
    ports:
      - "4001:4001"
    expose:
      - "4001"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - appnet
      - payment-processor
    depends_on:
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "122MB"

  app2:
    build:
      context: .
      dockerfile: Dockerfile
    platform: ${APP_PLATFORM:-linux/amd64}
    container_name: app2
    environment:
      - PORT=4002
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=tasrinha_dev
      - DB_POOL_SIZE=10
      - DB_POOL_COUNT=2
      - ERL_AFLAGS=+S 2:2
      - ERL_FLAGS=+sbwt none +sbwtdcpu none +sbwtdio none
      - ERL_FULLSWEEP_AFTER=10
      - LOG_LEVEL=info
    ports:
      - "4002:4002"
    expose:
      - "4002"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - appnet
      - payment-processor
    depends_on:
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "122MB"

  nginx:
    image: nginx:alpine
    container_name: nginx
    depends_on:
      - app1
      - app2
    ports:
      - "9999:80"
    volumes:
      - ./infra/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - appnet
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "26MB"

  postgres:
    image: postgres:17-alpine
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=tasrinha_dev
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 10
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - appnet
    deploy:
      resources:
        limits:
          cpus: "2.4"
          memory: "80MB"

networks:
  payment-processor:
    external: true
  appnet:
    driver: bridge

volumes:
  pgdata:
    driver: local
